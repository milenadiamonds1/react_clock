{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["getFormatedTime","date","toUTCString","slice","Clock","state","Date","timerId","this","window","setInterval","newDate","console","info","setState","prevName","name","props","oldName","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","clockName","hideClock","event","preventDefault","showClock","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUA,SAASA,EAAgBC,GACvB,OAAOA,EAAKC,cAAcC,OAAO,IAAK,GAGjC,IAAMC,EAAb,4MACEC,MAAyB,CACvBJ,KAAM,IAAIK,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAMC,EAAU,IAAIL,KAEpBG,OAAOG,QAAQC,KAAKb,EAAgBW,IAEpC,EAAKG,SAAS,CAAEb,KAAMU,MACrB,OAdP,gCAiBE,SAAmBI,GACjB,IAAQC,EAASR,KAAKS,MAAdD,KACFE,EAAUH,EAASC,KAErBA,IAASE,GACXT,OAAOG,QAAQO,MAAf,uBAAqCD,EAArC,eAAmDF,MAtBzD,kCA0BE,WACEI,cAAcZ,KAAKD,WA3BvB,oBA8BE,WACE,IAAQN,EAASO,KAAKH,MAAdJ,KACAe,EAASR,KAAKS,MAAdD,KAER,OACE,sBAAKK,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAEF,YAED,sBAAMK,UAAU,cAAhB,SACGrB,EAAgBC,YA1C3B,GAA2BqB,IAAMC,WCRjC,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWxB,OAAO,GAE3C,MAAM,SAAN,OAAgBsB,GAQX,IAAMG,EAAb,4MACEvB,MAAQ,CACNwB,UAAU,EACVC,UAAW,WAHf,EAMEvB,QAAU,EANZ,EAsBEwB,UAAY,SAACC,GACXA,EAAMC,iBACN,EAAKnB,SAAS,CAAEe,UAAU,KAxB9B,EA2BEK,UAAY,WACV,EAAKpB,SAAS,CAAEe,UAAU,KA5B9B,uDAQE,WAAqB,IAAD,OAClBM,SAASC,iBAAiB,cAAe5B,KAAKuB,WAC9CI,SAASC,iBAAiB,QAAS5B,KAAK0B,WACxC1B,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKI,SAAS,CAAEgB,UAAWN,QAC1B,QAbP,kCAgBE,WACEf,OAAOW,cAAcZ,KAAKD,SAC1B4B,SAASE,oBAAoB,QAAS7B,KAAK0B,WAC3CC,SAASE,oBAAoB,cAAe7B,KAAKuB,aAnBrD,oBA+BE,WACE,MAAgCvB,KAAKH,MAA7ByB,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,SAEnB,OACE,gCACE,6CAECA,GAAY,cAAC,EAAD,CAAOb,KAAMc,WAtClC,GAAyBR,IAAMC,WCd/Be,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.c81afaa6.chunk.js","sourcesContent":["import React from 'react';\n\nexport type State = {\n  date: Date;\n};\n\nexport type Props = {\n  name: string;\n};\n\nfunction getFormatedTime(date: Date): string {\n  return date.toUTCString().slice(-12, -4);\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const newDate = new Date();\n\n      window.console.info(getFormatedTime(newDate));\n\n      this.setState({ date: newDate });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevName: Props) {\n    const { name } = this.props;\n    const oldName = prevName.name;\n\n    if (name !== oldName) {\n      window.console.debug(`Renamed from ${oldName} to ${name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {getFormatedTime(date)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\n// eslint-disable-next-line react/prefer-stateless-function\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('click', this.showClock);\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n    document.removeEventListener('click', this.showClock);\n    document.removeEventListener('contextmenu', this.hideClock);\n  }\n\n  hideClock = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  showClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div>\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}